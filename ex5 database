activity_main.xml:

<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <LinearLayout
        android:orientation="vertical"
        android:padding="20dp"
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <EditText
            android:id="@+id/etName"
            android:hint="Enter Name"
            android:layout_width="match_parent"
            android:layout_height="wrap_content" />

        <EditText
            android:id="@+id/etNewName"
            android:hint="New Name (for update)"
            android:layout_marginTop="8dp"
            android:layout_width="match_parent"
            android:layout_height="wrap_content" />

        <Button
            android:id="@+id/btnAdd"
            android:text="Add to Database"
            android:layout_marginTop="10dp"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content" />

        <Button
            android:id="@+id/btnUpdate"
            android:text="Update Name"
            android:layout_marginTop="8dp"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content" />

        <Button
            android:id="@+id/btnDelete"
            android:text="Delete Name"
            android:layout_marginTop="8dp"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content" />

        <TextView
            android:id="@+id/tvResult"
            android:text="Stored Names:"
            android:layout_marginTop="20dp"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textSize="16sp" />
    </LinearLayout>
</ScrollView>







MainActivity.java:

package com.example.exo5;

import android.os.Bundle;
import android.content.ContentValues;
import android.database.Cursor;
import android.database.sqlite.*;
import android.widget.*;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    EditText etName, etNewName;
    Button btnAdd, btnUpdate, btnDelete;
    TextView tvResult;
    MyDatabaseHelper db;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        etName = findViewById(R.id.etName);
        etNewName = findViewById(R.id.etNewName);
        btnAdd = findViewById(R.id.btnAdd);
        btnUpdate = findViewById(R.id.btnUpdate);
        btnDelete = findViewById(R.id.btnDelete);
        tvResult = findViewById(R.id.tvResult);

        db = new MyDatabaseHelper();

        btnAdd.setOnClickListener(v -> {
            String name = etName.getText().toString().trim();
            if (!name.isEmpty()) {
                db.insertName(name);
                showToast("Name added");
                refreshNames();
            } else {
                showToast("Please enter a name");
            }
        });

        btnUpdate.setOnClickListener(v -> {
            String oldName = etName.getText().toString().trim();
            String newName = etNewName.getText().toString().trim();
            if (!oldName.isEmpty() && !newName.isEmpty()) {
                int rows = db.updateName(oldName, newName);
                showToast(rows > 0 ? "Name updated" : "Name not found");
                refreshNames();
            } else {
                showToast("Please enter both names");
            }
        });

        btnDelete.setOnClickListener(v -> {
            String name = etName.getText().toString().trim();
            if (!name.isEmpty()) {
                int rows = db.deleteName(name);
                showToast(rows > 0 ? "Name deleted" : "Name not found");
                refreshNames();
            } else {
                showToast("Please enter a name to delete");
            }
        });

        refreshNames();
    }

    void refreshNames() {
        tvResult.setText("Stored Names:\n" + db.getAllNames());
        etName.setText("");
        etNewName.setText("");
    }

    void showToast(String msg) {
        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
    }

    // Inner DB Helper class
    class MyDatabaseHelper extends SQLiteOpenHelper {
        private static final String DB_NAME = "MyDB.db";
        private static final String TABLE_NAME = "users";
        private static final String COL_NAME = "name";

        public MyDatabaseHelper() {
            super(MainActivity.this, DB_NAME, null, 1);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            db.execSQL("CREATE TABLE " + TABLE_NAME + " (" + COL_NAME + " TEXT)");
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldV, int newV) {
            db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
            onCreate(db);
        }

        public void insertName(String name) {
            SQLiteDatabase db = this.getWritableDatabase();
            ContentValues values = new ContentValues();
            values.put(COL_NAME, name);
            db.insert(TABLE_NAME, null, values);
            db.close();
        }

        public int updateName(String oldName, String newName) {
            SQLiteDatabase db = this.getWritableDatabase();
            ContentValues values = new ContentValues();
            values.put(COL_NAME, newName);
            int rows = db.update(TABLE_NAME, values, COL_NAME + "=?", new String[]{oldName});
            db.close();
            return rows;
        }

        public int deleteName(String name) {
            SQLiteDatabase db = this.getWritableDatabase();
            int rows = db.delete(TABLE_NAME, COL_NAME + "=?", new String[]{name});
            db.close();
            return rows;
        }

        public String getAllNames() {
            SQLiteDatabase db = this.getReadableDatabase();
            Cursor cursor = db.rawQuery("SELECT * FROM " + TABLE_NAME, null);
            StringBuilder result = new StringBuilder();
            while (cursor.moveToNext()) {
                result.append(cursor.getString(0)).append("\n");
            }
            cursor.close();
            db.close();
            return result.toString();
        }
    }
}
